        { Semantic Operations }
        oSymbolTblEnter = 14;
        oSymbolTblUpdate = 15;
        oSymbolTblPushScope = 16;
        oSymbolTblPopScope = 17;
        oSymbolTblLookupExternal = 18; { >>14 }
        oSymbolTblStripScope = 19;
        oSymbolTblMergeScope = 20;
        oSymbolStkPush = 21; { (17) }
        oSymbolStkPushIdentifier = 22;
        oSymbolStkPushLocalIdentifier = 23;
        oSymbolStkPushStandardVariable = 24; { (19) }
        oSymbolStkPushFormalParameter = 25;
        oSymbolStkSetKind = 26; { (17) }
        oSymbolStkLinkToStandardType = 27; { (16) }
        oSymbolStkEnterValue = 28;
        oSymbolStkEnterStringValue = 29;
        oSymbolStkEnterCodeAddress = 30;
        oSymbolStkEnterDataAddress = 31;
        oSymbolStkEnterTypeReference = 32;
        oSymbolStkChooseKind = 33; { >>17 }
        oSymbolStkChooseStandardFile = 34; { >>19 }
        oSymbolStkChooseStandardRoutine = 35; { >>18 }
        oSymbolStkPop = 36;
        oTypeTblEnter = 37;
        oTypeTblUpdate = 38;
        oTypeStkPush = 39; { (20) }
        oTypeStkPushSymbol = 40;
        oTypeStkPushComponent = 41;
        oTypeStkSetKind = 42; { (20) }
        oTypeStkSetRecursionFlag = 43; { (14) }
        oTypeStkChooseRecursionFlag = 44; { >>14 }
        oTypeStkLinkToStandardComponentType = 45; { (16) }
        oTypeStkEnterBounds = 46;
        oTypeStkVerifyBounds = 47; { >>14 }
        oTypeStkEnterParameterCount = 48;
        oTypeStkCompareParameterCount = 49; { >>14 }
        oTypeStkEnterComponentReference = 50;
        oTypeStkChooseKind = 51; { >>20 }
        oTypeStkChooseTypeReference = 52; { >>14 }
        oTypeStkCompareNames = 53; { >>14 }
        oTypeStkSwap = 54;
        oTypeStkPop = 55;
        oEmitNullAddress = 56;
        oEmitValue = 57;
        oEmitString = 58;
        oEmitDataAddress = 59;
        oEmitTrapKind = 60; { (21) }
        oEmitCaseBranchTable = 61;
        oAllocateAlignOnWord = 62;
        oAllocateVariable = 63;
        oAllocateVarParameter = 64;
        oAllocateDescriptor = 65;
        oValuePush = 66; { (13) }
        oValuePushInteger = 67;
        oValuePushStringLength = 68;
        oValuePushSymbol = 69;
        oValuePushCount = 70;
        oValuePushTypeStkLowerBound = 71;
        oValuePushTypeStkUpperBound = 72;
        oValueNegate = 73;
        oValueChoose = 74; { >>13 }
        oValuePop = 75;
        oCasePushDisplay = 76;
        oCasePopDisplay = 77;
        oCaseLookupLabel = 78; { >>14 }
        oCasePushLabel = 79;
        oCountPush = 80; { (13) }
        oCountPushValue = 81;
        oCountPop = 82;
        oCountIncrement = 83;
        oCountDecrement = 84;
        oCountChoose = 85; { >>13 }
        oFixPushForwardBranch = 86;
        oFixPopForwardBranch = 87;
        oFixPushTargetAddress = 88;
        oFixPopTargetAddress = 89;
        oFixPopAndEnterValue = 90;
        oFixSwap = 91;

        { Input Tokens }
        sIdentifier = 0;
        firstSemanticToken = 0;
        firstCompoundSemanticToken = 0;
        sInteger = 1;
        sStringLiteral = 2;
        lastCompoundSemanticToken = 2;
        sProgram = 3;
        sParmBegin = 4;
        sParmEnd = 5;
        sConst = 6;
        sType = 7;
        sVar = 8;
        sProcedure = 9;
        sBegin = 10;
        sEnd = 11;
        sNegate = 12;
        sModule = 13;
        sPublic = 14;
        sMutable = 15;
        sInitialValue = 16;
        sArray = 17;
        sFile = 18;
        sRange = 19;
        sCaseStmt = 20;
        sCaseOtherwise = 21;
        sCaseEnd = 22;
        sLabelEnd = 23;
        sExpnEnd = 24;
        sNullStmt = 25;
        sAssignmentStmt = 26;
        sSubscript = 27;
        sCallStmt = 28;
        sFieldWidth = 29;
        sIfStmt = 30;
        sThen = 31;
        sElse = 32;
        sWhileStmt = 33;
        sLoopStmt = 34;
        sLoopBreakIf = 35;
        sLoopEnd = 36;
        sEq = 37;
        sNE = 38;
        sLT = 39;
        sLE = 40;
        sGT = 41;
        sGE = 42;
        sAdd = 43;
        sSubtract = 44;
        sMultiply = 45;
        sDivide = 46;
        sModulus = 47;
        sInfixOr = 48;
        sOr = 49;
        sInfixAnd = 50;
        sSubstring = 51;
        sLength = 52;
        sAnd = 53;
        sNot = 54;
        sNewLine = 55;
        sEndOfFile = 56;
        lastSemanticToken = 56;

        { Output Tokens }
        tMultiply = 0;
        firstTcode = 0;
        tDivide = 1;
        tModulus = 2;
        tAdd = 3;
        tSubtract = 4;
        tEQ = 5;
        tNE = 6;
        tGT = 7;
        tGE = 8;
        tLT = 9;
        tLE = 10;
        tAnd = 11;
        tInfixAnd = 12;
        tOr = 13;
        tInfixOr = 14;
        tNegate = 15;
        tNot = 16;
        tChr = 17;
        tOrd = 18;
        tEoln = 19;
        tEOF = 20;
        tVarParm = 21;
        tFetchAddress = 22;
        tFetchInteger = 23;
        tFetchChar = 24;
        tFetchBoolean = 25;
        tAssignBegin = 26;
        tAssignAddress = 27;
        tAssignInteger = 28;
        tAssignChar = 29;
        tAssignBoolean = 30;
        tStoreParmAddress = 31;
        tStoreParmInteger = 32;
        tStoreParmChar = 33;
        tStoreParmBoolean = 34;
        tSubscriptBegin = 35;
        tSubscriptAddress = 36;
        tSubscriptInteger = 37;
        tSubscriptChar = 38;
        tSubscriptBoolean = 39;
        tArrayDescriptor = 40;
        tFileDescriptor = 41;
        tIfBegin = 42;
        tIfEnd = 43;
        tCaseBegin = 44;
        tWhileBegin = 45;
        tRepeatBegin = 46;
        tRepeatControl = 47;
        tCallBegin = 48;
        tParmEnd = 49;
        tProcedureEnd = 50;
        tWriteBegin = 51;
        tReadBegin = 52;
        tTrapBegin = 53;
        tWriteEnd = 54;
        tReadEnd = 55;
        tLiteralAddress = 56;
        firstCompoundTcode = 56;
        tLiteralInteger = 57;
        tLiteralChar = 58;
        tLiteralBoolean = 59;
        tLiteralString = 60;
        tFetchString = 61;
        tAssignString = 62;
        tStoreParmString = 63;
        tSubscriptString = 64;
        tConcatenate = 65;
        tRepeatString = 66;
        tSubstring = 67;
        tLength = 68;
        tStringEqual = 69;
        tStringDescriptor = 70;
        tSkipString = 71;
        tIfThen = 72;
        tIfMerge = 73;
        tCaseSelect = 74;
        tCaseMerge = 75;
        tCaseEnd = 76;
        tCaseOtherwise = 77;
        tWhileTest = 78;
        tWhileEnd = 79;
        tWhilePreBreak = 80;
        tWhileBreakIf = 81;
        tRepeatTest = 82;
        tSkipProc = 83;
        tCallEnd = 84;
        tLineNumber = 85;
        tTrap = 86;
        lastCompoundTcode = 86;
        tEndOfFile = 87;
        lastTcode = 87;

        { Input/Output Tokens }

        { Error Codes }
        eDuplicateName = 10;
        firstErrorCode = 10;
        eMultiplyDefined = 11;
        eUndefinedIdentifier = 12;
        eConstantReqd = 13;
        eNullString = 14;
        eSubrangeReqd = 15;
        eScalarReqd = 16;
        eIntegerConstReqd = 17;
        eBounds = 18;
        eSimpleTypeReqd = 19;
        eExternalUndeclared = 20;
        eExternalDeclare = 21;
        eFileVarReqd = 22;
        eFileNameReqd = 23;
        eOperandOperatorTypeMismatch = 24;
        eNonScalarValParm = 25;
        eParameterTypeMismatch = 26;
        eInsufficientActuals = 27;
        eExtraActuals = 28;
        eRecursiveCall = 29;
        eProcedureReqd = 30;
        eTypeIdentifierReqd = 31;
        eIntegerExpnReqd = 32;
        eBooleanExpnReqd = 33;
        eCharExpnReqd = 34;
        eArrayVarReqd = 35;
        eVariableReqd = 36;
        eDuplicateLabel = 37;
        eExpnOperandReqd = 38;
        eTypeMismatch = 39;
        eInvalidExpn = 40;
        eInputNotVisible = 41;
        eOutputNotVisible = 42;
        eFieldWidth = 43;
        eTextFileVarReqd = 44;
        eWriteExpn = 45;
        eReadVar = 46;
        lastSslErrorCode = 46;

        { Type Values }
        { Type 13 }
        zero = 0;
        one = 1;
        two = 2;
        three = 3;
        ten = 10;
        byteSize = 1;
        wordSize = 4;
        { Type 14 }
        no = 0;
        yes = 1;
        { Type 15 }
        firstPredeclaredId = 1;
        firstPredeclaredType = 1;
        pidInteger = 1;
        pidChar = 2;
        pidBoolean = 3;
        pidText = 4;
        lastPredeclaredType = 4;
        pidTrue = 5;
        pidFalse = 6;
        pidReset = 7;
        pidRewrite = 8;
        pidWrite = 9;
        pidWriteln = 10;
        pidRead = 11;
        pidReadln = 12;
        pidChr = 13;
        pidOrd = 14;
        pidEoln = 15;
        pidEof = 16;
        pidAssign = 17;
        lastPredeclaredId = 17;
        pidInput = 18;
        firstSpecialId = 18;
        pidOutput = 19;
        lastSpecialId = 19;
        { Type 16 }
        stdInteger = 0;
        stdChar = 1;
        stdBoolean = 2;
        stdText = 3;
        { Type 17 }
        syConstant = 0;
        syType = 1;
        syVariable = 2;
        syVarParameter = 3;
        syProcedure = 4;
        syFunction = 5;
        syExternal = 6;
        syExpression = 7;
        syUndefined = 8;
        syModule = 9;
        syPublicProcedure = 10;
        { Type 18 }
        rtReset = 1;
        rtRewrite = 2;
        rtWrite = 3;
        rtWriteln = 4;
        rtRead = 5;
        rtReadln = 6;
        rtOrd = 7;
        rtChr = 8;
        rtEoln = 9;
        rtEof = 10;
        rtAssign = 11;
        rtNull = 12;
        { Type 19 }
        stdInput = 0;
        stdOutput = 1;
        stdNull = 2;
        { Type 20 }
        tpInteger = 0;
        tpChar = 1;
        tpBoolean = 2;
        tpSubrange = 3;
        tpArray = 4;
        tpPackedArray = 5;
        tpFile = 6;
        tpNull = 7;
        { Type 21 }
        trHalt = 0;
        trReset = 1;
        trRewrite = 2;
        trRead = 3;
        trReadln = 4;
        trWrite = 5;
        trWriteln = 6;
        trWriteString = 7;
        trWriteInteger = 8;
        trWriteChar = 9;
        trReadInteger = 10;
        trReadChar = 11;
        trAssign = 12;

        { S/SL Rule Table Addresses } {
        Program = 0;
        ProgramParameter = 41;
        Block = 101;
        AllocateVar = 782;
        ProcedureDefinition = 860;
        ModuleDefinition = 1095;
        ConstantDefinitions = 177;
        TypeDefinitions = 336;
        VariableDeclarations = 679;
        AssignmentStmt = 1145;
        CallStmt = 1224;
        IfStmt = 1465;
        WhileStmt = 1498;
        CaseStmt = 1517;
        ConstantValue = 191;
        SymbolStkPushDefaultIntegerConstant = 3935;
        SymbolStkPushDefaultCharConstant = 3947;
        TypeBody = 374;
        ComponentType = 459;
        IndexType = 440;
        SimpleType = 512;
        ValuePushValuePlusOne = 3926;
        TypeTblEnterIfNew = 430;
        SymbolStkPushDefaultIntegerType = 3959;
        ValuePushTypeBounds = 599;
        SubrangeUpperBound = 617;
        EnterVariableAttributes = 736;
        Assignment = 1152;
        ProcedureHeading = 923;
        ProcedureParameterType = 969;
        ProcedurePrologue = 1027;
        CountPushCopy = 3931;
        Statement = 1140;
        Variable = 2234;
        Expression = 1669;
        CompareAndSwapTypes = 2008;
        BeginStmt = 1210;
        OpenProcedure = 2634;
        AssignProcedure = 2665;
        WriteProcedure = 2782;
        WritelnProcedure = 3320;
        ReadProcedure = 3378;
        ReadlnProcedure = 3740;
        ActualParameters = 1359;
        FlushActuals = 3999;
        VarActual = 1427;
        BooleanControlExpression = 3911;
        CaseSelectorExpression = 3894;
        CaseAlternative = 1563;
        Operand = 1697;
        UnaryOperator = 1831;
        BinaryOperator = 1863;
        FlushExpn = 3978;
        ConstantOperand = 2345;
        VariableOperand = 2384;
        FunctionOperand = 2411;
        SymbolStkPushDefaultIntegerVariable = 3966;
        FileOperand = 2609;
        CompareOperandAndResultTypes = 2108;
        CompareEqualityOperandTypes = 2169;
        CompareRelationalOperandTypes = 2119;
        VariableExtension = 2276;
        StandardFunctionActual = 2514;
        FileVariable = 3798;
        WriteText = 3112;
        WriteBinary = 3236;
        WriteStandardExpnList = 3045;
        TextFileVariable = 3839;
        ReadTextParameterList = 3508;
        ReadBinaryParameterList = 3574;
        ReadText = 3640;
        ReadBinary = 3669;
        }

        { S/SL Table Parameters }
        sslTblSize = 4018;
        minSslTableValue = -32767;
        maxSslTableValue = 32767;
